@model IEnumerable<VacationFinder.Data.Models.Tag>
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor;

@{
    ViewData["Title"] = "Tag";
}

<h1>Tag</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sort)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsActive)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedOn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModifiedOn)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Sort)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsActive)
                </td>
                <td>
                    @(item.CreatedOn.ToString("hh:mm dd.MM.yy"))
                </td>
                <td>
                    @(item.ModifiedOn.HasValue ? item.ModifiedOn.Value.ToString("hh:mm dd.MM.yy") : string.Empty)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>


@section Scripts
{
    <script>
        $(document).ready(function () {
            $.noConflict();
            $('.table').DataTable();
        });
    </script>
}