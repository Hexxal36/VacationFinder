@model IEnumerable<VacationFinder.Data.Models.Country>;

@{
    ViewData["Title"] = "Country";
}

<h1>Country</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Continent)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedOn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModifiedOn)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Continent)
            </td>
            <td>
                @(item.CreatedOn.ToString("hh:mm dd.MM.yy"))
            </td>
            <td>
                @(item.ModifiedOn.HasValue ? item.ModifiedOn.Value.ToString("hh:mm dd.MM.yy") : string.Empty)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
        }
    </tbody>
</table>

<script>
    $(document).ready(function () {
        $.noConflict();
        $('.table').DataTable();
    } );
</script>